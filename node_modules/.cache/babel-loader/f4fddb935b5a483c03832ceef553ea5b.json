{"ast":null,"code":"import _classCallCheck from \"/Users/user/Documents/Dev/berlin/techteamberlin_frontend_challenge/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/user/Documents/Dev/berlin/techteamberlin_frontend_challenge/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/user/Documents/Dev/berlin/techteamberlin_frontend_challenge/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/user/Documents/Dev/berlin/techteamberlin_frontend_challenge/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/user/Documents/Dev/berlin/techteamberlin_frontend_challenge/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/user/Documents/Dev/berlin/techteamberlin_frontend_challenge/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport 'react-bootstrap-table/dist/react-bootstrap-table.min.css';\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      isLoading: true,\n      launches: [],\n      error: null //function fetch data\n\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"fetchAllLauches\",\n    value: function fetchAllLauches() {\n      var _this2 = this;\n\n      // fetching data from SpaceX API\n      fetch(\"https://api.spacexdata.com/v3/launches?limit=20&launch_year=2018&order=desc&sort=core_flight\") // We get the API response and receive data in JSON format...\n      .then(function (response) {\n        return response.json();\n      }) // ...then we push fetched data in our new array\n      .then(function (data) {\n        var launchArr = [];\n        data.map(function (launch) {\n          return launchArr.push({\n            flight_number: launch.flight_number,\n            mission_name: launch.mission_name,\n            rocket_name: launch.rocket.rocket_name\n          });\n        }); //... then we update the launches state from pushed data in our new array [lauchArr]\n\n        _this2.setState({\n          launches: launchArr,\n          isLoading: false\n        });\n      }) //Catch any errors\n      .catch(function (error) {\n        return _this2.setState({\n          error: error,\n          isLoading: false\n        });\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchAllLauches();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          isLoading = _this$state.isLoading,\n          launches = _this$state.launches,\n          error = _this$state.error;\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"Frontend React Coding Challenge - Yves CYUZUZO\"), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"SpaceX 20 Latest launches\"), error ? React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, error.message) : null, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, !isLoading ? React.createElement(BootstrapTable, {\n        data: launches,\n        striped: true,\n        hover: true,\n        search: true,\n        searchPlaceholder: \"Search mission name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(TableHeaderColumn, {\n        dataField: \"flight_number\",\n        isKey: true,\n        dataAlign: \"center\",\n        dataSort: true,\n        searchable: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"Flight number\"), React.createElement(TableHeaderColumn, {\n        dataField: \"mission_name\",\n        dataSort: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"mission name\"), React.createElement(TableHeaderColumn, {\n        dataField: \"rocket_name\",\n        searchable: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"rocket name\")) : React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"Loading...\")));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/user/Documents/Dev/berlin/techteamberlin_frontend_challenge/src/App.js"],"names":["React","Component","BootstrapTable","TableHeaderColumn","App","state","isLoading","launches","error","fetch","then","response","json","data","launchArr","map","launch","push","flight_number","mission_name","rocket_name","rocket","setState","catch","fetchAllLauches","message"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport 'react-bootstrap-table/dist/react-bootstrap-table.min.css';\nimport {BootstrapTable, TableHeaderColumn} from 'react-bootstrap-table';\n  \n\nclass App extends Component {\n  state = {\n      isLoading: true,\n      launches: [],\n      error: null\n    }\n\n  //function fetch data\n  fetchAllLauches() {\n    // fetching data from SpaceX API\n      fetch(`https://api.spacexdata.com/v3/launches?limit=20&launch_year=2018&order=desc&sort=core_flight`)\n        // We get the API response and receive data in JSON format...\n        .then(response => response.json())\n        // ...then we push fetched data in our new array\n        .then(data => {\n          let launchArr = []\n          data.map(launch => (\n            launchArr.push({\n              flight_number: launch.flight_number,\n              mission_name: launch.mission_name,\n              rocket_name: launch.rocket.rocket_name\n            })\n          ))\n          //... then we update the launches state from pushed data in our new array [lauchArr]\n          this.setState({\n            launches: launchArr,\n            isLoading: false,\n          })\n        })\n        //Catch any errors\n        .catch(error => this.setState({ error, isLoading: false }));\n  }\n\n  componentDidMount() {\n    this.fetchAllLauches();\n  }\n\n  render() {\n    const { isLoading, launches, error } = this.state;\n    return (\n      <div className=\"App\">\n        <h3>Frontend React Coding Challenge - Yves CYUZUZO</h3>\n        <h2>SpaceX 20 Latest launches</h2>\n        {error ? <p>{error.message}</p> : null}\n        <div className=\"container\">\n          {!isLoading ? (\n            <BootstrapTable data={launches} striped={true} hover={true} search searchPlaceholder={\"Search mission name\"}>\n                  <TableHeaderColumn dataField=\"flight_number\" isKey={true} dataAlign=\"center\" dataSort={true} searchable={false}>Flight number</TableHeaderColumn>\n                  <TableHeaderColumn dataField=\"mission_name\"  dataSort={true}>mission name</TableHeaderColumn>\n                  <TableHeaderColumn dataField= \"rocket_name\" searchable={false}>rocket name</TableHeaderColumn>\n            </BootstrapTable>\n          ): (\n            <h4>Loading...</h4>\n          )}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}