{"ast":null,"code":"import _classCallCheck from \"/Users/user/Documents/Dev/berlin/techteamberlin_frontend_challenge/frontend_challenge/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/user/Documents/Dev/berlin/techteamberlin_frontend_challenge/frontend_challenge/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/user/Documents/Dev/berlin/techteamberlin_frontend_challenge/frontend_challenge/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/user/Documents/Dev/berlin/techteamberlin_frontend_challenge/frontend_challenge/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/user/Documents/Dev/berlin/techteamberlin_frontend_challenge/frontend_challenge/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/user/Documents/Dev/berlin/techteamberlin_frontend_challenge/frontend_challenge/src/App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport 'react-bootstrap-table/dist/react-bootstrap-table.min.css';\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      isLoading: true,\n      launches: [],\n      error: null\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"fetchAllLauches\",\n    value: function fetchAllLauches() {\n      var _this2 = this;\n\n      // Where we're fetching data from\n      fetch(\"https://api.spacexdata.com/v3/launches?launch_year=2018&order=desc&limit=20\") // We get the API response and receive data in JSON format...\n      .then(function (response) {\n        return response.json();\n      }) // ...then we update the launches state\n      .then(function (data) {\n        return _this2.setState({\n          launches: data,\n          isLoading: false\n        });\n      }) // Catch any errors we hit and update the app\n      .catch(function (error) {\n        return _this2.setState({\n          error: error,\n          isLoading: false\n        });\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchAllLauches();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          isLoading = _this$state.isLoading,\n          launches = _this$state.launches,\n          error = _this$state.error;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"console.log(launches)\", React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"20 Latest launches\"), error ? React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, error.message) : null, !isLoading ? React.createElement(BootstrapTable, {\n        data: launches,\n        striped: true,\n        hover: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(TableHeaderColumn, {\n        dataField: \"flight_number\",\n        isKey: true,\n        dataAlign: \"center\",\n        dataSort: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"Flight number\"), React.createElement(TableHeaderColumn, {\n        dataField: \"mission_name\",\n        dataSort: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"mission name\"), React.createElement(TableHeaderColumn, {\n        dataField: \"launches.rocket_name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"rocket name\")) : React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"Loading...\"));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/user/Documents/Dev/berlin/techteamberlin_frontend_challenge/frontend_challenge/src/App.js"],"names":["React","Component","BootstrapTable","TableHeaderColumn","App","state","isLoading","launches","error","fetch","then","response","json","data","setState","catch","fetchAllLauches","message"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,OAAO,WAAP;AACA,OAAO,0DAAP;AACA,SAAQC,cAAR,EAAwBC,iBAAxB,QAAgD,uBAAhD;;IAGMC,G;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACJC,MAAAA,SAAS,EAAE,IADP;AAEJC,MAAAA,QAAQ,EAAE,EAFN;AAGJC,MAAAA,KAAK,EAAE;AAHH,K;;;;;;sCAMY;AAAA;;AAChB;AACAC,MAAAA,KAAK,+EAAL,CACE;AADF,OAEGC,IAFH,CAEQ,UAAAC,QAAQ;AAAA,eAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,OAFhB,EAGE;AAHF,OAIGF,IAJH,CAIQ,UAAAG,IAAI;AAAA,eACR,MAAI,CAACC,QAAL,CAAc;AACZP,UAAAA,QAAQ,EAAEM,IADE;AAEZP,UAAAA,SAAS,EAAE;AAFC,SAAd,CADQ;AAAA,OAJZ,EAWE;AAXF,OAYGS,KAZH,CAYS,UAAAP,KAAK;AAAA,eAAI,MAAI,CAACM,QAAL,CAAc;AAAEN,UAAAA,KAAK,EAALA,KAAF;AAASF,UAAAA,SAAS,EAAE;AAApB,SAAd,CAAJ;AAAA,OAZd;AAaD;;;wCAEmB;AAClB,WAAKU,eAAL;AACD;;;6BAEM;AAAA,wBACgC,KAAKX,KADrC;AAAA,UACCC,SADD,eACCA,SADD;AAAA,UACYC,QADZ,eACYA,QADZ;AAAA,UACsBC,KADtB,eACsBA,KADtB;AAEP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAFF,EAGOA,KAAK,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIA,KAAK,CAACS,OAAV,CAAH,GAA4B,IAHxC,EAIO,CAACX,SAAD,GAGG,oBAAC,cAAD;AAAgB,QAAA,IAAI,EAAEC,QAAtB;AAAgC,QAAA,OAAO,EAAE,IAAzC;AAA+C,QAAA,KAAK,EAAE,IAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACM,oBAAC,iBAAD;AAAmB,QAAA,SAAS,EAAC,eAA7B;AAA6C,QAAA,KAAK,EAAE,IAApD;AAA0D,QAAA,SAAS,EAAC,QAApE;AAA6E,QAAA,QAAQ,EAAE,IAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADN,EAEM,oBAAC,iBAAD;AAAmB,QAAA,SAAS,EAAC,cAA7B;AAA6C,QAAA,QAAQ,EAAE,IAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFN,EAGM,oBAAC,iBAAD;AAAmB,QAAA,SAAS,EAAC,sBAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAHN,CAHH,GASD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAbN,CADF;AAoBD;;;;EAlDeN,S;;AAqDlB,eAAeG,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport 'react-bootstrap-table/dist/react-bootstrap-table.min.css';\nimport {BootstrapTable, TableHeaderColumn} from 'react-bootstrap-table';\n  \n\nclass App extends Component {\n  state = {\n      isLoading: true,\n      launches: [],\n      error: null\n    }\n\n    fetchAllLauches() {\n      // Where we're fetching data from\n      fetch(`https://api.spacexdata.com/v3/launches?launch_year=2018&order=desc&limit=20`)\n        // We get the API response and receive data in JSON format...\n        .then(response => response.json())\n        // ...then we update the launches state\n        .then(data =>\n          this.setState({\n            launches: data,\n            isLoading: false,\n          })\n\n        )\n        // Catch any errors we hit and update the app\n        .catch(error => this.setState({ error, isLoading: false }));\n    }\n\n    componentDidMount() {\n      this.fetchAllLauches();\n    }\n\n  render() {\n    const { isLoading, launches, error } = this.state;\n    return (\n      <div >\n      console.log(launches)\n        <h1>20 Latest launches</h1>\n            {error ? <p>{error.message}</p> : null}\n            {!isLoading ? (\n\n        \n                <BootstrapTable data={launches} striped={true} hover={true}>\n                      <TableHeaderColumn dataField=\"flight_number\" isKey={true} dataAlign=\"center\" dataSort={true}>Flight number</TableHeaderColumn>\n                      <TableHeaderColumn dataField=\"mission_name\"  dataSort={true}>mission name</TableHeaderColumn>\n                      <TableHeaderColumn dataField=\"launches.rocket_name\" >rocket name</TableHeaderColumn>\n                  </BootstrapTable>\n          ): (\n            <h3>Loading...</h3>\n          )}\n          \n\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}